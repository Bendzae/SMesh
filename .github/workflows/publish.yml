on:
  push:
    tags:
      - "*"

name: Publish

jobs:
  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@nextest
      - name: Install alsa
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev
      - name: Install udev
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev
      - name: "Build and test"
        run: cargo nextest run --workspace --all-targets --all-features

  crates_io_publish:
    name: Publish (crates.io)
    needs:
      - build_and_test_linux

    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: cargo-release Cache
        id: cargo_release_cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/cargo-release
          key: ${{ runner.os }}-cargo-release

      - run: cargo install cargo-release
        if: steps.cargo_release_cache.outputs.cache-hit != 'true'

      - name: cargo login
        run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: "cargo release publish"
        run: |-
          cargo release \
            publish \
            --workspace \
            --all-features \
            --allow-branch HEAD \
            --no-confirm \
            --execute

  github_release:
    name: Create GitHub Release
    needs:
      - crates_io_publish
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
